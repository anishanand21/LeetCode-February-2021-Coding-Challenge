Input:
s = "abpcplea", d = ["ale","apple","monkey","plea"]

Output: 
"apple"


class Solution {
public:
    string findLongestWord(string s, vector<string>& d) {
        string ans;
        for(string word: d){ //for each word in d 
            int j=0,k=0;
            while(j<s.size() && k<word.size()){ 
                if(s[j]==word[k]) //for each letter in s and word, compare
                    k++;         // & increment only if they equal
                j++;   
            }
            int n=word.size();
            if(k==n && ((ans.size()==n && ans>word) || ans.size()<n))
                ans=word;
            //save word as ans if the three conditions are met: 
                //1. k==n: if every letter of word exists in string s (and in order of the word)
                //2. ans.size()<n: word is a longer word than ans 
                //3. (ans.size()==n && ans>word): word is same size as ans but is lexicographically smaller
            //REMEMBER: "return the longest word with the smallest lexicographical order."
        }
        return ans;
    }
};
