Input: head = [3,2,0,-4], pos = 1
Output: true
Explanation: There is a cycle in the linked list, where the tail connects to the 1st node (0-indexed).

class Solution {
public:
    bool hasCycle(ListNode *head)
    {
        ListNode *fast;
        fast = head;
        while (head) {

            if (fast->next && fast->next->next)
                fast = fast->next->next;
            else
                return false;

            if (fast == head)
                return true;
             head = head->next;
        }

        return false;
    }
};
